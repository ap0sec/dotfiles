% Intended LaTeX compiler: pdflatex
\documentclass[a4paper,titlepage]{jsarticle}
                                \usepackage{caption}
                \usepackage{url}
                \usepackage[dvipdfmx]{graphicx}

\usepackage{preamble}
\usepackage{amsmath}
\author{18-B03 小高 拓海}
\date{提出期限：\today}
\title{実験1  HDLによる論理回路設計と演習}
\begin{document}

\maketitle

\section{目的}
\label{sec:orgacff8bd}
ハードウェア記述言語であるHDL（Hardware Description Language）について、実際にVHDLを用いて論理回路設計を行うことで理解を深める。

\section{作成する課題の仕様}
\label{sec:orga61d2ac}
テキスト及び配布資料を参考に、カップラーメン用のタイマを設計する。ただし、以下の仕様に従うものとする。

\begin{enumerate}
\item カウンタに供給されるクロック周期は1秒とする。
\item 計測する時間は3分とする。
\item カウントは減算方式とし、リセットボタンを離したときからカウントを開始する。
\item カウントは3分00秒から始まり、0分00秒になったらカウントを停止する。
\item 表示は分から秒まで全て行うものとする。
\end{enumerate}

この仕様を満たすために、次の手順で設計を行う。
\begin{enumerate}
\item 10進減算カウンタ（秒単位）、6進減算カウンタ（10秒単位）、4進減算カウンタ（分単位）のモジュールをそれぞれ設計する。
\item 各減算カウンタモジュールを用いてタイマのカウンタモジュールを設計する。
\end{enumerate}

設計した各モジュールの動作確認のために、シミュレーションを行うものとする。具体的には以下の項目についてシミュレーションを行い、レポートに示す。
\begin{enumerate}
\item 6進、10進減算カウンタの各々の動作
\item タイマのカウンタモジュールの動作
\end{enumerate}

なお、シミュレーション時は仕様上は1秒としたクロック周期を100[ns]として実行する。
\section{作成したVHDL記述}
\label{sec:org8f17b7c}
\subsection{6進減算カウンタ}
\label{sec:org1228085}
6進減算カウンタのVHDL（抜粋）をListing1に示す。なお、コメントは説明用に付与したもので、実際のコードに埋め込むとエラーを出力するので注意が必要である。

\begin{lstlisting}[caption=6進減算カウンタのVHDL（抜粋）,label=list]
/* 入出力ポートの設定 */
entity downcnt6 is
	port(clk:in std_logic;
		reset_n:in std_logic;                   // リセット信号（立ち下がり）
		enable_n:in std_logic;                  // 許可信号（立ち下がり）
		count:out std_logic_vector(3 downto 0); // 出力
		zflag:out std_logic                     // ゼロフラグ
		);
end downcnt6;
		
architecture behavioral of downcnt6 is

signal cntreg:std_logic_vector(3 downto 0);
signal zreg:std_logic;

begin
	count<=cntreg;
	zflag<=zreg;
	process(clk,reset_n)
	begin
		if reset_n='0' then
                   /* リセット信号入力時、０セット */
			cntreg<="0000"; 
			zreg<='0';

		elsif clk='1' and clk'event then
			if enable_n='0' then
				if cntreg=0 then
                                   /* カウントが０まで進んだら５に戻す */
					cntreg<="0101";
					zreg<='1';
				elsif cntreg=1 then
                                   /* カウンタが１（次が０）のとき、減算と共にゼロフラグセット */
					cntreg<=cntreg-1;
					zreg<='0';
				else
                                   /* 通常時、減算 */
					cntreg<=cntreg-1;
					zreg<='1';
				end if;
			end if;
		end if;
	end process;
end behavioral;
\end{lstlisting}

\subsection{10進減算カウンタ}
\label{sec:org23cc92c}
10進減算カウンタのVHDL（抜粋）をListing2に示す。なお、コメントは説明用に付与したもので、実際のコードに埋め込むとエラーを出力するので注意が必要である。

\begin{lstlisting}[caption=10進減算カウンタのVHDL（抜粋）,label=list]
/* 入出力ポートの設定 */
entity downcnt10 is
       /* ６進カウンタと同様 */
end downcnt10;
		
architecture behavioral of downcnt10 is

signal cntreg:std_logic_vector(3 downto 0);
signal zreg:std_logic;

begin
	count<=cntreg;
	zflag<=zreg;
	process(clk,reset_n)
	begin
		if reset_n='0' then
                   /* リセット信号入力時、０セット */
			cntreg<="0000";
			zreg<='0';
		elsif clk='1' and clk'event then
			if enable_n='0' then
				if cntreg=0 then
                                   /* カウントが０まで進んだら９に戻す */
					cntreg<="1001";
					zreg<='1';
				elsif cntreg=1 then
                                   /* カウンタが１（次が０）のとき、減算と共にゼロフラグセット */
					cntreg<=cntreg-1;
					zreg<='0';
				else
                                   /* 通常時、減算 */
					cntreg<=cntreg-1;
					zreg<='1';
				end if;
			end if;
		end if;
	end process;
end behavioral;
\end{lstlisting}

\subsection{タイマカウンタ}
\label{sec:orgf2f121b}
タイマカウンタのVHDL（抜粋）をListing3に示す。なお、コメントは説明用に付与したもので、実際のコードに埋め込むとエラーを出力するので注意が必要である。

また、タイマカウンタ作成時のモジュール構成図を図\ref{fig:org8c24afc}に示す。

\begin{lstlisting}[caption=タイマカウンタのVHDL（抜粋）,label=list]
/* 入出力ポートの設定 */
entity tmr3min is
	port(clk:in std_logic;
		reset_n:in std_logic;
		count3:out std_logic_vector(3 downto 0);
		count6:out std_logic_vector(3 downto 0);
		count10:out std_logic_vector(3 downto 0)
		);
end tmr3min;
		
architecture RTL of tmr3min is
     /* 各カウンタのコンポーネントのロード */
	component downcnt3 is
		port(clk:in std_logic;
			reset_n:in std_logic;
			enable_n:in std_logic;
			count:out std_logic_vector(3 downto 0);
			zflag:out std_logic
		);
	end component;
	
	component downcnt6 is
		port(clk:in std_logic;
			reset_n:in std_logic;
			enable_n:in std_logic;
			count:out std_logic_vector(3 downto 0);
			zflag:out std_logic
		);
	end component;
	
	component downcnt10 is
		port(clk:in std_logic;
			reset_n:in std_logic;
			enable_n:in std_logic;
			count:out std_logic_vector(3 downto 0);
			zflag:out std_logic
		);
	end component;

signal zreg:std_logic_vector(2 downto 0);
signal enable:std_logic_vector(2 downto 0);

begin
    /* ポートマップの記述 */
	counter3:downcnt3 port map(
		clk => clk,
		reset_n => reset_n,
		enable_n => enable(2),
		count => count3,
		zflag => zreg(2)
	);
	
	counter6:downcnt6 port map(
		clk => clk,
		reset_n => reset_n,
		enable_n => enable(1),
		count => count6,
		zflag => zreg(1)
	);
	
	counter10:downcnt10 port map(
		clk => clk,
		reset_n => reset_n,
		enable_n => enable(0),
		count => count10,
		zflag => zreg(0)
	);
	
	process(clk,reset_n)
	begin
			if zreg="000" then
                         /* すべてが０（０分００秒）のとき、すべての許可信号をオフ*/
				enable <= "111";
			elsif zreg(1)='0' and zreg(0)='0' then
                         /* ００秒のとき、４進カウンタに許可信号*/
				enable <= "000";
			elsif zreg(0)='0' then
                         /* ＊０秒のとき、６進カウンタに許可信号*/
				enable <= "100";
			else
                         /* 通常時、１０進カウンタのみに許可信号*/
				enable <= "110";
			end if;
	end process;

end RTL;
\end{lstlisting}

\begin{figure}[htbp]
\centering
\includegraphics[width=.9\linewidth]{./img/module.png}
\caption{\label{fig:org8c24afc}
モジュール構成図}
\end{figure}

\section{シミュレーション結果}
\label{sec:orgfb6620d}
\subsection{6進減算カウンタ}
\label{sec:org64d17b2}
Listing1についてシミュレーションを行った結果を図\ref{fig:org27e4b03},\ref{fig:org3f93961}に示す。それぞれ許可信号を入力したときの動作と、許可信号が入力されない場合・リセット信号が入力されたときの動作をシミュレーションしたものである。

\begin{figure}[htbp]
\centering
\includegraphics[width=.9\linewidth]{./img/6s_1.png}
\caption{\label{fig:org27e4b03}
6進減算カウンタのシミュレーション結果（許可信号が入力されているときの動作）}
\end{figure}

\begin{figure}[htbp]
\centering
\includegraphics[width=.9\linewidth]{./img/6s_2.png}
\caption{\label{fig:org3f93961}
6進減算カウンタのシミュレーション結果（許可信号が入力されていないときの動作・リセット信号が入力されたときの動作）}
\end{figure}

\subsection{10進減算カウンタ}
\label{sec:orgf0086cc}
Listing2についてシミュレーションを行った結果を図\ref{fig:org8e9a8dd},\ref{fig:org96a2928}に示す。それぞれ許可信号を入力したときの動作と、許可信号が入力されない場合・リセット信号が入力されたときの動作をシミュレーションしたものである。

\begin{figure}[htbp]
\centering
\includegraphics[width=.9\linewidth]{./img/10s_1.png}
\caption{\label{fig:org8e9a8dd}
10進減算カウンタのシミュレーション結果（許可信号が入力されているときの動作）}
\end{figure}

\begin{figure}[htbp]
\centering
\includegraphics[width=.9\linewidth]{./img/10s_2.png}
\caption{\label{fig:org96a2928}
10進減算カウンタのシミュレーション結果（許可信号が入力されていないときの動作・リセット信号が入力されたときの動作）}
\end{figure}

\subsection{タイマカウンタ}
\label{sec:org635f722}
Listing3についてシミュレーションを行った結果を図\ref{fig:org37ba5d3}〜\ref{fig:org9d8a738}に示す。それぞれ動作開始時、動作停止時、リセット信号入力時、動作終了後のリセット信号受け付けについてシミュレーションしたものである。

\begin{figure}[htbp]
\centering
\includegraphics[width=.9\linewidth]{./img/3min_1.png}
\caption{\label{fig:org37ba5d3}
タイマカウンタ（動作開始時）}
\end{figure}

\begin{figure}[htbp]
\centering
\includegraphics[width=.9\linewidth]{./img/3min_2.png}
\caption{\label{fig:orge4b4fb8}
タイマカウンタ（０分００秒になり動作停止した様子）}
\end{figure}

\begin{figure}[htbp]
\centering
\includegraphics[width=.9\linewidth]{./img/3min_3.png}
\caption{\label{fig:org07da06b}
タイマカウンタ（動作中にリセット信号が入力され、状態が正しくリセットされる様子）}
\end{figure}

\begin{figure}[htbp]
\centering
\includegraphics[width=.9\linewidth]{./img/3min_4.png}
\caption{\label{fig:org9d8a738}
タイマカウンタ（０分００秒で動作停止後も、リセット信号を正しく受け付けて動作開始する様子）}
\end{figure}
\end{document}
